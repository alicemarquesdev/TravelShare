@model UsuarioModel

@{
    Layout = "_LayoutDeslogado"; // Define o layout utilizado para a página, no caso, o layout para usuários deslogados.
}

<div class="container mb-5">
    <!-- Container principal para centralizar o conteúdo da página -->
    <div class="row justify-content-center">
        <div class="col-lg-7">
            <!-- Card que irá conter o formulário de criação de conta -->
            <div class="card shadow-lg border-0 rounded-lg mt-5">
                <div class="card-header">
                    <!-- Título da página -->
                    <h3 class="text-center font-weight-light my-4">Criar Conta</h3>
                </div>
                <div class="card-body">
                    <!-- Formulário que será enviado via POST para o controller Login, action CriarConta -->
                    <form asp-controller="Login" asp-action="CriarConta" method="post">
                        <input type="hidden" asp-for="Id" value=""/>

                        <div class="row mb-3">
                            <!-- Linha de campos: Nome e Username -->
                            <div class="col-md-6">
                                <div class="form-floating mb-3 mb-md-0">
                                    <!-- Campo para o nome do usuário -->
                                    <input class="form-control" asp-for="Nome" type="text" maxlength="30" required/>
                                    <label for="Nome">Nome</label>
                                    <!-- Mensagem de erro de validação, caso o campo não seja preenchido corretamente -->
                                    <span class="text-danger">@Html.ValidationMessageFor(x => x.Nome)</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <!-- Campo para o username do usuário -->
                                    <input class="form-control" asp-for="Username" type="text" maxlength="20" required />
                                    <label for="Username">Username</label>
                                    <!-- Mensagem de erro de validação, caso o campo não seja preenchido corretamente -->
                                    <span class="text-danger">@Html.ValidationMessageFor(x => x.Username)</span>
                                </div>
                            </div>
                        </div>
                        <div class="form-floating mb-3">
                            <!-- Campo para o email do usuário -->
                            <input class="form-control" asp-for="Email" type="email" maxlength="150" required />
                            <label for="Email">Email</label>
                            <!-- Mensagem de erro de validação, caso o campo não seja preenchido corretamente -->
                            <span class="text-danger">@Html.ValidationMessageFor(x => x.Email)</span>
                        </div>
                        <div class="row mb-3">
                            <!-- Linha de campos: Data de Nascimento e Cidade de Origem -->
                            <div class="col-md-6">
                                <div class="form-floating mb-3 mb-md-0">
                                    <!-- Campo para a data de nascimento -->
                                    <input class="form-control" asp-for="DataNascimento" type="date" min="1920-01-01" max="2007-01-01" title="Selecione uma data entre 01/01/1920 e 01/01/2007" />
                                    <label for="DataNascimento">Data de Nascimento</label>
                                    <!-- Mensagem de erro de validação, caso o campo não seja preenchido corretamente -->
                                    <span class="text-danger">@Html.ValidationMessageFor(x => x.DataNascimento)</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating mb-3 mb-md-0">
                                    <!-- Campo para a cidade de origem, com autocompletar -->
                                    <input class="form-control cities-autocomplete" id="cities-autocomplete" asp-for="CidadeDeNascimento" type="text" />
                                    <label for="CidadeDeNascimento">Cidade de Origem</label>
                                    <!-- Mensagem de erro de validação, caso o campo não seja preenchido corretamente -->
                                    <span class="text-danger">@Html.ValidationMessageFor(x => x.CidadeDeNascimento)</span>
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <!-- Linha de campos: Senha e Confirmação de Senha -->
                            <div class="col-md-6">
                                <div class="form-floating mb-3 mb-md-0">
                                    <!-- Campo para a senha do usuário -->
                                    <input class="form-control" asp-for="Senha" type="password" id="Senha" name="Senha" maxlength="20" required />
                                    <label for="Senha">Senha</label>
                                    <!-- Mensagem de erro de validação, caso o campo não seja preenchido corretamente -->
                                    <span id="senhaErro" class="text-danger">@Html.ValidationMessageFor(x => x.Senha)</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating mb-3 mb-md-0">
                                    <!-- Campo para confirmação da senha -->
                                    <input class="form-control" asp-for="SenhaConfirmacao" type="password" maxlength="20"/>
                                    <label for="SenhaConfirmacao">Senha Confirmação</label>
                                    <!-- Mensagem de erro de validação, caso o campo não seja preenchido corretamente -->
                                    <span class="text-danger">@Html.ValidationMessageFor(x => x.SenhaConfirmacao)</span>
                                </div>
                            </div>
                        </div>
                        <div class="mt-4 mb-0">
                            <!-- Botão de envio do formulário -->
                            <div class="d-grid">
                                <button type="submit" class="btn btn-dark w-100">Criar Conta</button>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="card-footer text-center py-3">
                    <!-- Link para redirecionar usuários que já possuem conta para fazer login -->
                    <div class="small">
                        <a asp-controller="Login" asp-action="Login">Tem uma conta? Faça Login!</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        const apiKey = '@ViewBag.GoogleApiKey';  // Acessando a chave via ViewBag
        const script = document.createElement('script');
        script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places&callback=initAutocomplete`;
        script.async = true;
        script.defer = true;
        document.head.appendChild(script);
    </script>
    <script src="~/js/googleApi.js"></script>
    <script src="~/js/validacao-senha.js"></script>
}
